-- UNIFICAÇÃO DAS TABELAS ESTUDANTES E REGISTROS PARA A CONSULTA DE DUPLICIDADES -- DENTRO DA BASE  E CRIAÇÃO DE UMA NOVA TABELA

SELECT student.id AS st_id, student.name, register.id AS rg_id, register.student_id, 
register.year_id, register.classroom_id
INTO ST_RG
FROM (nome da tabela correspondente)  RIGHT JOIN (nome da tabela correspondente) ON student.id = register.student_id
ORDER BY st_id ASC

/* IMPLANTAÇÃO DE UMA NOVA COLUNA ONDE SERA ADICIONADO OS VALORES QUE
CONFIRMAM A DUPLICIDADE PARA SERVIR COMO FILTRO POTERIORMENTE */

ALTER TABLE ST_RG ADD duplicado_name VARCHAR

/* CONSULTA DE DUPLICIDADE DENTRO DA TABELA CRIADA, TENDO COMO FILTRO O ANO */
SELECT st_id, count(st_id) as total
FROM ST_RG
WHERE year_id = '1' – CAMPO REFERENTE AO ANO --
GROUP BY st_id
HAVING COUNT (st_id)  > 1
ORDER BY total desc

/* APÓS A CONSTATAÇÃO DE DUPLICIDADE NA CONSULTA É DADO O COMANDO PARA COLOCAR O VALORES (YES) OU (NO) NOS REGISTROS QUE 
APARECEM MAIS DE UMA VEZ NA TABELA DENTRO DO MESMO ANO */ 

UPDATE ST_RG SET duplicado_name = CASE
  WHEN uniao.contagem > 1 THEN 'YES'
  ELSE 'NO'
END
FROM (
  SELECT ST_RG.st_id, ST_RG.year_id, name, COUNT(name) AS contagem
  FROM ST_RG
  WHERE ST_RG.year_id = '1' /* O VALOR COLOCADO NESTA LINHA CORRESPONDE AO ANO E DEVE SER MUDADO PARA QUE TODOS OS REGISTROS SEJAM CONSULTADOS COM BASE NO ANO,
  ESTA CONSULTA DEVE SER FEITA MAIS DE UMA VEZ MUDANDO O VALOR CORRESPONDENTE AO ANO DESEJADO */
  GROUP BY ST_RG.st_id, ST_RG.year_id, name
) AS uniao
WHERE ST_RG.st_id = uniao.st_id AND ST_RG.year_id = uniao.year_id;
